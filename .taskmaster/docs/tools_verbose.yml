task-master-ai - Ready (36 tools)
    Tools:
    - add_dependency:
        Add a dependency relationship between two tasks
    - add_subtask:
        Add a subtask to an existing task
    - add_tag:
        Create a new tag for organizing tasks in different contexts
    - add_task:
        Add a new task using AI
    - analyze_project_complexity:
        Analyze task complexity and generate expansion recommendations.
    - clear_subtasks:
        Clear subtasks from specified tasks
    - complexity_report:
        Display the complexity analysis report in a readable format
    - copy_tag:
        Copy an existing tag to create a new tag with all tasks and metadata
    - delete_tag:
        Delete an existing tag and all its tasks
    - expand_all:
        Expand all pending tasks into subtasks based on complexity or defaults
    - expand_task:
        Expand a task into subtasks for detailed implementation
    - fix_dependencies:
        Fix invalid dependencies in tasks automatically
    - generate:
        Generates individual task files in tasks/ directory based on tasks.json
    - get_task:
        Get detailed information about a specific task
    - get_tasks:
        Get all tasks from Task Master, optionally filtering by status and including subtasks.
    - initialize_project:
        Initializes a new Task Master project structure by calling the core initialization logic. Creates necessary
  folders and configuration files for Task Master in the current directory.
    - task-master-ai__list_tags:
        List all available tags with task counts and metadata
    - models:
        Get information about available AI models or set model configurations. Run without arguments to get the current
   model configuration and API key status for the selected model providers.
    - move_task:
        Move a task or subtask to a new position
    - next_task:
        Find the next task to work on based on dependencies and status
    - parse_prd:
        Parse a Product Requirements Document (PRD) text file to automatically generate initial tasks. Reinitializing
  the project is not necessary to run this tool. It is recommended to run parse-prd after initializing the project and
  creating/importing a prd.txt file in the project root's .taskmaster/docs directory.
    - remove_dependency:
        Remove a dependency from a task
    - remove_subtask:
        Remove a subtask from its parent task
    - remove_task:
        Remove a task or subtask permanently from the tasks list
    - rename_tag:
        Rename an existing tag
    - research:
        Perform AI-powered research queries with project context
    - response-language:
        Get or set the response language for the project
    - rules:
        Add or remove rule profiles from the project.
    - scope_down_task:
        Decrease the complexity of one or more tasks using AI
    - scope_up_task:
        Increase the complexity of one or more tasks using AI
    - set_task_status:
        Set the status of one or more tasks or subtasks.
    - update:
        Update multiple upcoming tasks (with ID >= 'from' ID) based on new context or changes provided in the prompt.
  Use 'update_task' instead for a single specific task or 'update_subtask' for subtasks.
    - update_subtask:
        Appends timestamped information to a specific subtask without replacing existing content. If you just want to
  update the subtask status, use set_task_status instead.
    - update_task:
        Updates a single task by ID with new information or context provided in the prompt.
    - use_tag:
        Switch to a different tag context for task operations
    - validate_dependencies:
        Check tasks for dependency issues (like circular references or links to non-existent tasks) without making
  changes.