<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="13" skipped="0" tests="33" time="17.261" timestamp="2025-09-25T21:23:19.193215" hostname="158c5d704f48"><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[0]" time="0.055"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 0

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[1]" time="0.035"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 1

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[2]" time="0.036"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 2

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[3]" time="0.031"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 3

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[4]" time="0.028"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 4

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[5]" time="0.034"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 5

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[6]" time="0.037"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 6

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[7]" time="0.035"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 7

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[8]" time="0.039"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 8

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_api" name="test_health_check_multiple_times[9]" time="0.038"><failure message="assert &quot;disconnected...t('SELECT 1')&quot; == 'connected'&#10;  - connected&#10;  + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')">execution_number = 9

&gt;   ???
E   assert "disconnected...t('SELECT 1')" == 'connected'
E     - connected
E     + disconnected: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_api.py:21: AssertionError</failure></testcase><testcase classname="app.tests.test_graph_api" name="test_graph_query_endpoint" time="0.643" /><testcase classname="app.tests.test_ingest_integration.TestMemOSIntegrationEndpoints" name="test_memory_storage_endpoint" time="3.708" /><testcase classname="app.tests.test_ingest_integration.TestMemOSIntegrationEndpoints" name="test_memory_retrieval_endpoint" time="1.330" /><testcase classname="app.tests.test_ingest_integration.TestMemOSIntegrationEndpoints" name="test_memory_search_endpoint" time="0.506" /><testcase classname="app.tests.test_ingest_integration.TestMemOSIntegrationEndpoints" name="test_tiered_memory_storage" time="0.072" /><testcase classname="app.tests.test_ingest_integration.TestMemOSHealthForIntegration" name="test_health_check_detailed" time="0.022" /><testcase classname="app.tests.test_ingest_integration" name="test_memOS_ready_for_integration" time="0.335" /><testcase classname="app.tests.test_integration" name="test_health_check" time="0.015" /><testcase classname="app.tests.test_integration" name="test_tool_registration" time="0.014"><failure message="Failed: Tool registration failed: {&quot;detail&quot;:&quot;Error registering tool: 400: Failed to register tool. Tool name might already exist.&quot;}">&gt;   ???
E   Failed: Tool registration failed: {"detail":"Error registering tool: 400: Failed to register tool. Tool name might already exist."}

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_integration.py:46: Failed</failure></testcase><testcase classname="app.tests.test_integration" name="test_memory_store" time="0.094" /><testcase classname="app.tests.test_integration" name="test_memory_query" time="0.112" /><testcase classname="app.tests.test_integration" name="test_end_to_end_flow" time="0.118" /><testcase classname="app.tests.test_neo4j_client" name="test_neo4j_connection" time="0.024" /><testcase classname="app.tests.test_neo4j_client" name="test_create_and_get_concept_node" time="0.028" /><testcase classname="app.tests.test_neo4j_client" name="test_create_relationship" time="0.053" /><testcase classname="app.tests.test_simple" name="test_simple_assert" time="0.001" /><testcase classname="app.tests.test_tiered_storage" name="test_store_memory_tier1" time="0.038"><failure message="AssertionError: assert 'key' in {'memory_id': '1e26bb88d0a440cbcc19fc1ea81c4299', 'message': 'Memory stored in Redis', 'success': True, 'tier': 1}">redis_client = &lt;app.services.redis_client.RedisClient object at 0x7a4fcd082c10&gt;

&gt;   ???
E   AssertionError: assert 'key' in {'memory_id': '1e26bb88d0a440cbcc19fc1ea81c4299', 'message': 'Memory stored in Redis', 'success': True, 'tier': 1}

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_tiered_storage.py:47: AssertionError</failure></testcase><testcase classname="app.tests.test_tiered_storage" name="test_store_memory_tier2" time="0.110" /><testcase classname="app.tests.test_tiered_storage" name="test_store_memory_tier3" time="0.094"><failure message="AssertionError: assert 'node' in {'knowledge_graph': {'concepts': ['Memory'], 'concepts_extracted': 1, 'memory_node_created': True, 'node': {'content':..._Time__second': 36, ...}}}}, 'memory_id': 41, 'message': 'Memory stored in full mode', 'operational_mode': 'full', ...}">neo4j_client = &lt;app.services.neo4j_client.Neo4jClient object at 0x7a4fcd1af820&gt;

&gt;   ???
E   AssertionError: assert 'node' in {'knowledge_graph': {'concepts': ['Memory'], 'concepts_extracted': 1, 'memory_node_created': True, 'node': {'content':..._Time__second': 36, ...}}}}, 'memory_id': 41, 'message': 'Memory stored in full mode', 'operational_mode': 'full', ...}

C:\Users\steyn\ApexSigmaProjects.Dev\services\memos.as\app\tests\test_tiered_storage.py:103: AssertionError</failure></testcase><testcase classname="libs.apexsigma-core.tests.test_models" name="test_agent_persona" time="0.012" /><testcase classname="libs.apexsigma-core.tests.test_models" name="test_task" time="0.001" /><testcase classname="libs.apexsigma-core.tests.test_utils" name="test_settings" time="0.169" /><testcase classname="libs.apexsigma-core.tests.test_utils" name="test_get_logger" time="0.016" /></testsuite></testsuites>